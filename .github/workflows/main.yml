
name: Release

on:
  push:
    tags:
    # so a vX.Y.Z-test1 doesn't trigger build
    - 'v[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+-pre*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build
        id: build
        run: |
          make info
          make release
          VERSION=$(make echo-version)
          echo ::set-output name=VERSION::${VERSION}
          PACKAGE_VERSION=$(make echo-package-version)
          echo ::set-output name=PACKAGE_VERSION::${PACKAGE_VERSION}
          echo "Version $VERSION, Package version $PACKAGE_VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: fortio/fortio:${{ steps.build.outputs.VERSION }}, fortio/fortio:latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Fortio ${{ steps.build.outputs.VERSION }}
          draft: true

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="${GITHUB_REF##*/}"
          echo "tag_name=$tag_name"
          # tends to fail and not find the release somehow; add a small sleep... (yuck)
          sleep 10
          gh release upload "${tag_name}" release/*.{tgz,zip,rpm,deb,gz}
