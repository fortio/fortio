name: Release

permissions:
  actions: read
  contents: write
  packages: write

on:
  push:
    tags:
      # so a vX.Y.Z-test1 doesn't trigger build
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-pre*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Common Setup
        id: common_setup
        uses: fortio/workflows/.github/actions/common_setup@main
        with:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: Available platforms
        run: |
          echo "Build platforms: ${{ steps.common_setup.outputs.platforms }}"
      - name: Build
        id: build
        run: |
          make info
          make release
          VERSION=$(make echo-version)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          PACKAGE_VERSION=$(make echo-package-version)
          echo "Version $VERSION, Package version $PACKAGE_VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # pin@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: fortio/fortio:${{ env.VERSION }}, fortio/fortio:latest

      - name: Create Release
        id: create_release
        # Need to find a replacement not using set-output
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # pin@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Fortio ${{ env.VERSION }}
          draft: true

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="${GITHUB_REF##*/}"
          echo "will use tag_name=$tag_name"
          # tends to fail and not find the release somehow; add a small sleep... (yuck)
          sleep 10
          gh release upload "${tag_name}" release/*.{tgz,zip,rpm,deb,gz}
