# testscript framework tests for fortio's main binary / command line
# Eventually we can convert most of Webtest.sh to here (except parts specifically about testing the Docker image)

# Basic usage test
!fortio
!stdout .
stderr 'Missing command argument'

# (short) version
fortio version
stdout '^dev$'
!stderr .

# (long) version
fortio buildinfo
stdout '^dev  go'
stdout 'path	fortio.org/fortio'
!stderr .

# Content-Type override through headers
fortio curl -H 'content-TYPE: foo/bar' -H 'xyz: bar blah' https://debug.fortio.org/test-path
stderr 'HTTP/1.1 200 OK'
stdout 'Xyz: bar blah'
stdout 'Content-Type: foo/bar'
stdout 'POST /test-path HTTP/1.1'

# Script command tests
fortio script test.gr
stdout '^42$'

# Error case: bad file
!fortio script no-such-file.gr
stderr 'open no-such-file.gr: no such file or directory'

# Error case: bad script
!fortio script bad.gr
stderr 'panic: runtime error: integer divide by zero'

# Stdin script test
stdin test.gr
fortio script -
stdout '^42$'

# Pseudo interactive test
fortio script
stderr 'Starting interactive grol script mode'
stderr 'EOF'

# fortio.load tests: bad type
!fortio script badload1.gr
stderr 'err: Run type \\"badtype\\" unexpected'

# fortio.load tests: config not a map
!fortio script badload2.gr
stderr 'wrong type of argument got=STRING, want fortio.load\(string, map\)'

# fortio.load tests: missing destination/url
!fortio script badload3.gr
stderr 'err: can.t resolve empty host'


-- badload1.gr --
fortio.load("badtype", {})

-- badload2.gr --
fortio.load("http", "not a map")

-- badload3.gr --
fortio.load("http", {})

-- test.gr --
40+2

-- bad.gr --
1/0
